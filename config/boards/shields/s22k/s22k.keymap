/*
 * Copyright (c) 2022 Daniel Grenehed
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

&mt {
	retro-tap;
};

/ {
	macros {
        th_macro: th_macro {
            label = "ZM_th_macro";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <0>;
            bindings = <&macro_tap &kp T &kp H>;
        };
    };

	behaviors {
		/*

		*/
        tdCMDCTRL: td-cmd-ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "CMD-CTRL";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LGUI>, <&kp LCTRL>;
        };
		td1: td-bracket { /* ( ) */
			compatible = "zmk,behavior-tap-dance";
			label = "BRACKET";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp LS(N8)>, <&kp LS(N9)>;
		}; 
		td2: td-square-bracket { /* [ ] */
			compatible = "zmk,behavior-tap-dance";
			label = "SQUARE-BRACKET";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp RA(N8)>, <&kp RA(N9)>;
		};
		td3: td-curly-bracket { /* { } */
			compatible = "zmk,behavior-tap-dance";
			label = "CURLY-BRACKET";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp LS(RA(N8))>, <&kp LS(RA(N9))>;
		};
		td4: td-angle-bracket { /* < > */
			compatible = "zmk,behavior-tap-dance";
			label = "ANGLE-BRACKET";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp NON_US_BSLH>, <&kp PIPE2>;
		};
		td5: td-mlt-div { /* * / */
			compatible = "zmk,behavior-tap-dance";
			label = "MLT-DIV";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp LS(BSLH)>, <&kp LS(N7)>;
		};
		td6: strofe { /* ´ ` */
			compatible = "zmk,behavior-tap-dance";
			label = "STROFE";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp EQUAL>, <&kp LS(EQUAL)>;
		};
		td7: sequal { /* = ≈ */
			compatible = "zmk,behavior-tap-dance";
			label = "SEQUAL";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp LS(N0)>, <&kp RA(N0)>;
		};
		td8: sminus { /* - ~ */
			compatible = "zmk,behavior-tap-dance";
			label = "SMINUS";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp FSLH>, <&kp RA(RBKT)>;
		};
		tdNextPrev: nextprev {
			compatible = "zmk,behavior-tap-dance";
			label = "NextPrev";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp C_NEXT>, <&kp C_PREV>;
		};
		tdBackDelete: backdelete {
			compatible = "zmk,behavior-tap-dance";
			label = "BackDelete";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp BSPC>, <&kp DEL>;
		};
		tdSpaceTab: spacetab {
			compatible = "zmk,behavior-tap-dance";
			label = "SpaceTab";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp SPACE>, <&kp TAB>;
		};
		tdStrings: strings { /* ' " :		compatible = "zmk,behavior-tap-dance";
			label = "Strings";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp APOS>, <&kp LS(N2)>;
		};
		tdSlashes: slashes { /* / \ */
			compatible = "zmk,behavior-tap-dance";
			label = "Slashes";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp LS(N7)>, <&kp RA(LS(N7))>;
		};
		tdSquigg: squigg {
			compatible = "zmk,behavior-tap-dance";
			label = "Squigg";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp RA(RBKT)>, <&kp RA(N0)>;
		};
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			// --------------------------------------------------------
			// | A | W | F | P |				 	  | L | U | Y | . |
			// | D | R | S | T |				 	  | N | E | I | O |
			// | ALT | SHIFT | WIN/CTRl |           | SPACE | MO | MO |
			// --------------------------------------------------------
			bindings = <
				&kp A &kp W &kp F &kp P					&kp L &kp U &kp Y &kp DOT
				&kp D &kp R &kp S &kp T 				&kp N &kp E &kp I &kp O  
				 &kp RALT &kp LSHIFT &tdCMDCTRL		&kp SPACE &mo 1 &mo 2
			>;
		};

		mod1_layer {
			// ---------------------------------------------------
			// | @ | '/" | <> | | |			| Å | O | Q | , |
			// | Å | X | Ä | G |			| J | ENTER | Ö | , |
			// | ALT | SHIFT | WIN |          | SPACE | MO | MO |
			// ---------------------------------------------------
			bindings = <
				&kp RA(N2) &tdStrings &td4 &kp RA(N7) 		&kp LBKT &kp O &kp Q &kp COMMA
				&kp LBKT &kp X &kp APOS &kp G 		&kp J &kp RET &kp SEMI &kp COMMA
				     &trans &trans &trans			&trans &trans &trans 
			>;
		};

		mod2_layer {
			// ---------------------------------------------------
			// | § | ´` | ¨ | + |				 | 1 | 2 | 3 | 0 |
			// | ≈ | ~≈ | = | - |				 | 7 | 8 | 9 | */ |
			// | ALT | SHIFT | WIN |            | SPACE | MO | MO |
			// ---------------------------------------------------
			bindings = <
				&kp GRAVE &td6 &kp RBKT &kp MINUS	&kp N1 &kp N2 &kp N3 &kp N0
				&kp RA(N0) &tdSquigg &kp LS(N0) &kp FSLH 	&kp N7 &kp N8 &kp N9 &td5
				&trans &trans &trans			&trans &trans &trans
			>;
		};
		
		mod3_layer {
			// ---------------------------------------------------
			// | sl4 | Backspace | UP | DELETE |	 | F10 | F11 | F12 | F2 |
			// | sl4 | RIGHT | DOWN | LEFT |	 		 | F5 | ESC | F1 | F4 |
			// | ALT | SHIFT | WIN |                    | SPACE | MO | MO |
			// ---------------------------------------------------
			bindings = <
				&sl 4 &kp BSPC &kp UP &kp DEL	&kp F10 &kp F11 &kp F12 &kp F2
				&sl 4 &kp LEFT &kp DOWN &kp RIGHT 		&kp F5 &kp ESC &kp F1 &kp F4
				 &trans &trans &trans			    	&trans &trans &trans
			>;
		};

		mod4_layer {
			// ---------------------------------------------------
			// | out_toggle | bt0 | bt1 | bt2 |				| Brightness up | play/pause | volume up | Lock |
			// | out_toggle | bt3 | bt4 | bt5 |		| Brightness down | Next/Prev | volume down | 0 |
			// | ALT | SHIFT | WIN |                | SPACE | MO | MO |
			// ---------------------------------------------------
			bindings = <
				&out OUT_TOG &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2		&kp C_BRI_UP &kp C_PP &kp C_VOL_UP &kp K_PWR
				&out OUT_TOG &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 	&kp C_BRI_DN &tdNextPrev &kp C_VOL_DN &kp N0
				 &trans &trans &trans							    	&trans &trans &trans
			>;
		};

	};

	conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };	
};


/ {
    combos {
        compatible = "zmk,combos";

		/*

			Layer 0 In-between row

			| upper row
			-----------------------------------------
			| Z | V | C | B |		| M | H | K | Q |
			-----------------------------------------
			| lower row
			*/
		combo_butt_1l0 {
			timeout-ms = <30>;
			key-positions = <0 8>;
			layers = <0>;
			bindings = <&kp Z>;
		};
		combo_butt_2l0 {
			timeout-ms = <30>;
			key-positions = <1 9>;
			layers = <0>;
			bindings = <&kp V>;
		};
		combo_butt_3l0 {
			timeout-ms = <30>;
			key-positions = <2 10>;
			layers = <0>;
			bindings = <&kp C>;
		};
        combo_butt_4l0 {
            timeout-ms = <30>;
            key-positions = <3 11>;
			layers = <0>;
            bindings = <&kp B>;
        };
		combo_butt_5l0 {
			timeout-ms = <30>;
			key-positions = <4 12>;
			layers = <0>;
			bindings = <&kp M>;
		};
		combo_butt_6l0 {
			timeout-ms = <30>;
			key-positions = <5 13>;
			layers = <0>;
			bindings = <&kp H>;
		};
		combo_butt_7l0 {
			timeout-ms = <30>;
			key-positions = <6 14>;
			layers = <0>;
			bindings = <&kp K>;
		};
		combo_butt_8l0 {
			timeout-ms = <30>;
			key-positions = <7 15>;
			layers = <0>;
			bindings = <&kp Q>;
		};
		
		/*
			Layer 1 In-between row

			| upper row
			-----------------------------------------
			| # | Z | TAB | D |		| ? | & | ! | % |
			-----------------------------------------
			| lower row
		*/
		combo_butt_1l1 {
			timeout-ms = <30>;
			key-positions = <0 8>;
			layers = <1>;
			bindings = <&kp LS(N3)>;
		};
		combo_butt_2l1 {
			timeout-ms = <30>;
			key-positions = <1 9>;
			layers = <1>;
			bindings = <&kp Z>;
		};
		combo_butt_3l1 {
			timeout-ms = <30>;
			key-positions = <2 10>;
			layers = <1>;
			bindings = <&kp TAB>;
		};
		combo_butt_4l1 {
			timeout-ms = <30>;
			key-positions = <3 11>;
			layers = <1>;
			bindings = <&kp D>;
		};

		combo_butt_5l1 {
			timeout-ms = <30>;
			key-positions = <4 12>;
			layers = <1>;
			bindings = <&kp LS(MINUS)>;
		};
		combo_butt_6l1 {
			timeout-ms = <30>;
			key-positions = <5 13>;
			layers = <1>;
			bindings = <&kp LS(N6)>;
		};
		combo_butt_7l1 {
			timeout-ms = <30>;
			key-positions = <6 14>;
			layers = <1>;
			bindings = <&kp LS(N1)>;
		};
		combo_butt_8l1 {
			timeout-ms = <30>;
			key-positions = <7 15>;
			layers = <1>;
			bindings = <&kp LS(N5)>;
		};

		/*
			Layer 2 In-between row

			-----------------------------------------
			| ! | " | # | * |		| 4 | 5 | 6 | % |
			-----------------------------------------

		*/
		combo_butt_1l2 {
			timeout-ms = <30>;
			key-positions = <0 8>;
			layers = <2>;
			bindings = <&kp EXCL>;
		};
		combo_butt_2l2 {
			timeout-ms = <30>;
			key-positions = <1 9>;
			layers = <2>;
			bindings = <&kp AT>;
		};
		combo_butt_3l2 {
			timeout-ms = <30>;
			key-positions = <2 10>;
			layers = <2>;
			bindings = <&kp HASH>;
		};
		combo_butt_4l2 {
			timeout-ms = <30>; 
			key-positions = <3 11>;
			layers = <2>;
			bindings = <&kp LS(BSLH)>;
		};
		combo_butt_5l2 {
			timeout-ms = <30>;
			key-positions = <4 12>;
			layers = <2>;
			bindings = <&kp N4>;
		};
		combo_butt_6l2 {
			timeout-ms = <30>;
			key-positions = <5 13>;
			layers = <2>;
			bindings = <&kp N5>;
		};
		combo_butt_7l2 {
			timeout-ms = <30>;
			key-positions = <6 14>;
			layers = <2>;
			bindings = <&kp N6>;
		};
		combo_butt_8l2 {
			timeout-ms = <30>;
			key-positions = <7 15>;
			layers = <2>;
			bindings = <&kp PRCNT>;
		};
		
		/* 
			Layer 3 In-between row

			Magnet align thirds
			-----------------------------------------------------------------
			| CTRL+ALT+D | CTRL+ALT+E | CTRL+ALT+F | CTRL+ALT+T |		| CTRL+ALT+G | CTRL+ALT+C | WIN+SPACE | WIN+ALT+SHIFT+Q |
			-----------------------------------------------------------------
		*/
		combo_butt_1l3 {
			timeout-ms = <30>;
			key-positions = <0 8>;
			layers = <3>;
			bindings = <&kp RC(RA(D))>;
		};
		combo_butt_2l3 {
			timeout-ms = <30>;
			key-positions = <1 9>;
			layers = <3>;
			bindings = <&kp RC(RA(E))>;
		};
		combo_butt_3l3 {
			timeout-ms = <30>;
			key-positions = <2 10>;
			key-positions = <2 10>;
			layers = <3>;
			bindings = <&kp RC(RA(F))>;
		};
		combo_butt_4l3 {
			timeout-ms = <30>;
			key-positions = <3 11>;
			layers = <3>;
			bindings = <&kp RC(RA(T))>;
		};
		combo_butt_5l3 {
			timeout-ms = <30>;
			key-positions = <4 12>;
			layers = <3>;
			bindings = <&kp RC(RA(G))>;
		};
		combo_butt_6l3 {
			timeout-ms = <30>;
			key-positions = <5 13>;
			layers = <3>;
			bindings = <&kp RC(RA(C))>;
		};
		combo_butt_7l3 {
			timeout-ms = <30>;
			key-positions = <6 14>;
			layers = <3>;
			bindings = <&kp LG(SPACE)>;
		};
		combo_butt_8l3 {
			timeout-ms = <30>;
			key-positions = <7 15>;
			layers = <3>;
			bindings = <&kp LG(RA(LS(Q)))>;
		};

		/* 
			Layer 4 In-between row
			-------------------------------------------------------------
			| & | / | ( | Clear Bt profile |		| ) | = | ? | Flash |
			-------------------------------------------------------------
		*/
		combo_butt_1l4 {
			timeout-ms = <30>;
			key-positions = <0 8>;
			layers = <4>;
			bindings = <&kp CARET>;
		};
		combo_butt_2l4 {
			timeout-ms = <30>;
			key-positions = <1 9>;
			layers = <4>;
			bindings = <&kp AMPS>;
		};
		combo_butt_3l4 {
			timeout-ms = <30>;
			key-positions = <2 10>;
			layers = <4>;
			bindings = <&kp STAR>;
		};
		combo_butt_4l4 {
			timeout-ms = <30>;
			key-positions = <3 11>;
			layers = <4>;
			bindings = <&bt BT_CLR>;
		};
		combo_butt_5l4 {
			timeout-ms = <30>;
			key-positions = <4 12>;
			layers = <4>;
			bindings = <&kp LPAR>;
		};
		combo_butt_6l4 {
			timeout-ms = <30>;
			key-positions = <5 13>;
			layers = <4>;
			bindings = <&kp RPAR>;
		};
		combo_butt_7l4 {
			timeout-ms = <30>;
			key-positions = <6 14>;
			layers = <4>;
			bindings = <&kp UNDER>;
		};
		combo_butt_8l4 {
			timeout-ms = <30>;
			key-positions = <7 15>;
			layers = <4>;
			bindings = <&bootloader>;
		};

    };
};
